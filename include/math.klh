%ifndef math_h
%define math_h

%include namespace.m

%define prog_name math
%define prog_name_alias math

--opts
declare_function(prog_name,pow,prog_name_alias,pow)
ROUTINE math__pow(value : REAL ; exponent : REAL) : REAL FROM math
declare_function(prog_name,floor,prog_name_alias,floor)
ROUTINE math__floor(num : REAL) : INTEGER FROM math
declare_function(prog_name,ceil,prog_name_alias,ceil)
ROUTINE math__ceil(num : REAL) : INTEGER FROM math
declare_function(prog_name,round,prog_name_alias,round)
ROUTINE math__round(num : REAL) : INTEGER FROM math
declare_function(prog_name,decimal,prog_name_alias,decimal)
ROUTINE math__decimal(num : REAL; digits : INTEGER) : REAL FROM math
declare_function(prog_name,log10,prog_name_alias,log10)
ROUTINE math__log10(num : REAL) : REAL FROM math
declare_function(prog_name,log2,prog_name_alias,log2)
ROUTINE math__log2(num : REAL) : REAL FROM math
declare_function(prog_name,map_real,prog_name_alias,mapreal)
ROUTINE math__map_real(x, in_min, in_max, out_min, out_max : REAL) : REAL FROM math
declare_function(prog_name,map_int,prog_name_alias,mapint)
ROUTINE math__map_int(x, in_min, in_max : REAL ; out_min, out_max : INTEGER) : INTEGER FROM math
--random numbers
declare_function(prog_name,srand,prog_name_alias,srand)
ROUTINE math__srand(seed : INTEGER) FROM math
declare_function(prog_name,rand,prog_name_alias,rand)
ROUTINE math__rand : REAL FROM math
declare_function(prog_name,rand_range,prog_name_alias,randrng)
ROUTINE math__rand_range(min : REAL ; max : REAL) : REAL FROM math
declare_function(prog_name,rand_int,prog_name_alias,randint)
ROUTINE math__rand_int : INTEGER FROM math
declare_function(prog_name,rand_color,prog_name_alias,randrgb)
ROUTINE math__rand_color : INTEGER FROM math
declare_function(prog_name,rand_position,prog_name_alias,randpos)
ROUTINE math__rand_position(seed : INTEGER) : XYZWPR FROM math
declare_function(prog_name,rand_vector,prog_name_alias,randvec)
ROUTINE math__rand_vector(seed : INTEGER) : VECTOR FROM math
declare_function(prog_name,rand_rarr,prog_name_alias,randarr)
ROUTINE math__rand_rarr(seed : INTEGER; out_arr : ARRAY[*] OF REAL) FROM math
--array math
declare_function(prog_name,max_int,prog_name_alias,maxint)
ROUTINE math__max_int(numbers : ARRAY[*] OF INTEGER) : INTEGER FROM math
declare_function(prog_name,max_real,prog_name_alias,maxreal)
ROUTINE math__max_real(numbers : ARRAY[*] OF REAL) : REAL FROM math
declare_function(prog_name,min_int,prog_name_alias,minint)
ROUTINE math__min_int(numbers : ARRAY[*] OF INTEGER) : INTEGER FROM math
declare_function(prog_name,min_real,prog_name_alias,minreal)
ROUTINE math__min_real(numbers : ARRAY[*] OF REAL) : REAL FROM math
declare_function(prog_name,sum_real,prog_name_alias,sumreal)
ROUTINE math__sum_real(numbers : ARRAY[*] OF REAL) : REAL FROM math
declare_function(prog_name,average_real,prog_name_alias,avereal)
ROUTINE math__average_real(numbers : ARRAY[*] OF REAL) : REAL FROM math
declare_function(prog_name,quicksort_real,prog_name_alias,qsortr)
ROUTINE math__quicksort_real(arr : ARRAY[*] OF REAL) FROM math
declare_function(prog_name,quicksort_int,prog_name_alias,qsorti)
ROUTINE math__quicksort_int(arr : ARRAY[*] OF INTEGER) FROM math

-- vector math
declare_function(prog_name,norm,prog_name_alias,norm)
ROUTINE math__norm(v : VECTOR) : REAL FROM math
declare_function(prog_name,norm2,prog_name_alias,norm2)
ROUTINE math__norm2(v : VECTOR) : REAL FROM math
declare_function(prog_name,proj,prog_name_alias,prja)
ROUTINE math__proj(v : VECTOR ; ax : VECTOR) : VECTOR FROM math
declare_function(prog_name,proj_orthoganal,prog_name_alias,prjort)
ROUTINE math__proj_orthoganal(v : VECTOR ; ax : VECTOR) : VECTOR FROM math
declare_function(prog_name,proj_length,prog_name_alias,prjlen)
ROUTINE math__proj_length(v : VECTOR ; ax : VECTOR) : REAL FROM math
declare_function(prog_name,average_vector,prog_name_alias,avevec)
ROUTINE math__average_vector(arrv : ARRAY[*] OF VECTOR) : VECTOR FROM math
declare_function(prog_name,manhattan_dist,prog_name_alias,mandst)
ROUTINE math__manhattan_dist(start_v : VECTOR; end_v : VECTOR) : REAL FROM math

-- matrix convolutions
declare_function(prog_name,translate,prog_name_alias,trans)
ROUTINE math__translate(pos : XYZWPR ; amount : VECTOR) : XYZWPR FROM math
declare_function(prog_name,rotx,prog_name_alias,rotx)
ROUTINE math__rotx(pos : XYZWPR ; angle : REAL) : XYZWPR FROM math
declare_function(prog_name,roty,prog_name_alias,roty)
ROUTINE math__roty(pos : XYZWPR ; angle : REAL) : XYZWPR FROM math
declare_function(prog_name,rotz,prog_name_alias,rotz)
ROUTINE math__rotz(pos : XYZWPR ; angle : REAL) : XYZWPR FROM math
-- algorithms

%endif --math_h